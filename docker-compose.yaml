version: '3.5'

services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  fastapi-sqlalchemy:
    container_name: fastapi-sqlalchemy
    build: ./fastapi-sqlalchemy
    ports:
      - "8080:8080"
    networks:
      - postgres

  fastapi-psycopg2:
    container_name: fastapi-psycopg2
    build: ./fastapi-psycopg2
    ports:
      - "8081:8081"
    networks:
      - postgres

  node-express-sequelize:
    container_name: node-express-sequelize
    build: ./node-express-sequelize
    ports:
      - "8082:8082"
    networks:
      - postgres

  # plumber-dbplyr:
  #   container_name: plumber-dbplyr
  #   build: ./plumber-dbplyr
  #   ports:
  #     - "8083:8083"
  #   networks:
  #     - postgres

  # plumber-rpostgresql:
  #   container_name: plumber-rpostgresql
  #   build: ./plumber-rpostgresql
  #   ports:
  #     - "8084:8084"
  #   networks:
  #     - postgres

  asp-entity:
    container_name: asp-entity
    build: ./asp-entity
    ports:
      - "8085:8080"
    networks:
      - postgres

networks:
  postgres:
    driver: bridge

volumes:
    postgres:
    pgadmin: